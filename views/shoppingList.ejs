<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
  <link href="/css/style.css" rel="stylesheet">
  <title>Shopping List</title>
  <style>
    .list-group-item {
      list-style-type: none;
      background-color: #B9BBC1;
      border: 1px solid white;
      border-radius: 100px;
      cursor: pointer;
      width: fit-content;
      padding: 10px 20px;
    }
    .list-group-item:hover {
      background-color: #9fa2a9;
    }
    .card {
      width: fit-content;
      margin: auto;
      border: none;
    }
    .strikethrough {
      text-decoration: line-through;
    }
  </style>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
  <%- include("partials/navbar.ejs") %>
  <div class="container mt-4">
    <h1 class="text-center mb-4">Shopping List</h1>
    <hr>
    <div class="mt-4" id="shoppingList">
      <!-- Shopping list items will be dynamically inserted here -->
    </div>
  </div>
  <script>
    $(document).ready(function () {
      // Function to render the shopping list
      function renderShoppingList(shoppingListItems) {
        const shoppingListContainer = $('#shoppingList');
        shoppingListContainer.empty(); // Clear the existing shopping list

        // Render the updated shopping list items
        shoppingListItems.forEach((item, index) => {
          const listItem = $('<div>', { class: 'card my-2' }).append(
            $('<ul>', { class: 'list-group list-group-flush' }).append(
              $('<li>', {
                class: `list-group-item d-flex justify-content-between align-items-center ${item.checked ? 'strikethrough' : ''}`,
                'data-shoppinglistid': item.id
              }).append(
                $('<div>', { class: 'form-check clickable-area' }).append(
                  $('<input>', {
                    class: 'form-check-input',
                    type: 'checkbox',
                    id: `checkbox_${index}`,
                    checked: item.checked,
                    change: function () {
                      const isChecked = this.checked;
                      const shoppingListId = $(this).closest('.list-group-item').data('shoppinglistid');
                      updateItemStatus(shoppingListId, isChecked);
                    }
                  }),
                  $('<label>', { for: `checkbox_${index}`, text: `${item.quantity} ${item.unit} ${item.ingredientName}` })
                )
              )
            )
          );
          shoppingListContainer.append(listItem);
        });
      }

      // Function to update the checked status of a shopping list item
      function updateItemStatus(shoppingListId, isChecked) {
        $.ajax({
          type: 'POST',
          url: '/checkOffItem',
          data: { shoppingListId: shoppingListId, checked: isChecked },
          success: function (response) {
            // Item status updated successfully, re-render the shopping list
            fetchShoppingList();
          },
          error: function (response) {
            alert('An error occurred while updating the ingredient status');
          }
        });
      }

      // Function to fetch the shopping list data from the server
      function fetchShoppingList() {
        $.ajax({
          type: 'GET',
          url: '/api/shoppingList',
          success: function (response) {
            renderShoppingList(response);
          },
          error: function (response) {
            alert('An error occurred while fetching the shopping list');
          }
        });
      }

      // Fetch the initial shopping list on page load
      fetchShoppingList();
    });
  </script>
</body>
</html>